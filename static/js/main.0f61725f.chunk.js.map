{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/Skills/Skills.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","components/Footer/Footer.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","themeName","setThemeName","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","Provider","value","toggleTheme","name","localStorage","setItem","header","about","role","description","resume","social","linkedin","github","projects","stack","sourceCode","livePreview","skills","contact","Navbar","useContext","showNavList","setShowNavList","toggleNavList","className","style","display","length","href","onClick","type","Header","homepage","title","About","_jsxs","_jsx","download","_Fragment","GitHubIcon","LinkedInIcon","ProjectContainer","_ref","project","map","item","uniqid","Projects","id","Skills","skill","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","removeEventListener","fontSize","Contact","Footer","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f61725f.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName(e.matches ? 'dark' : 'light')\n    });\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }\n","const header = {\n  // all the properties are optional - can be left empty or deleted\n  homepage: 'https://surajlokesh.github.io/portfolio/',\n  title: 'SL.',\n}\n\nconst about = {\n  // all the properties are optional - can be left empty or deleted\n  name: 'Suraj',\n  role: 'Software Engineer',\n  description:\n    'I am a Software Engineer with expertise in full-stack development, specializing in Java, Spring Boot, React, and AWS. I thrive in fast-paced, collaborative environments where I can solve complex problems and build scalable, high-performance applications. With experience in both backend architecture and frontend development, I excel at designing robust APIs, optimizing databases, and creating seamless user experiences. My passion lies in developing impactful solutions that drive efficiency and innovation. I am currently based in Miami, FL, on F1-OPT (STEM eligible), and am open to relocation. Letâ€™s connect and discuss how I can contribute to your team!',\n  resume: 'https://example.com',\n  social: {\n    linkedin: 'https://www.linkedin.com/in/surajlokesh/',\n    github: 'https://github.com/surajlokesh?tab=repositories',\n  },\n}\n\nconst projects = [\n  // projects can be added an removed\n  // if there are no projects, Projects section won't show up\n  {\n    name: 'F1-App (Ongoing)',\n    description:\n      'This is my latest project, where I am working on building an F1 data analytics platform.',\n    stack: ['TypeScript', 'React', 'Node js'],\n    sourceCode: 'https://github.com/F1-Insight/F1-app',\n    livePreview: 'https://github.com',\n  },\n  {\n    name: 'Sentiment-Analysis-From-Text-Input',\n    description:\n      'A machine learning model that analyzes sentiment from text input.',\n    stack: ['Python', 'Flask', 'Machine Learning'],\n    sourceCode:\n      'https://github.com/surajlokesh/Sentiment-Analysis-From-Text-Input',\n    livePreview: 'https://github.com',\n  },\n  {\n    name: 'Walmart Sales Analysis',\n    description:\n      'A predictive sales analysis tool using PySpark for inventory management.',\n    stack: ['Python', 'PySpark'],\n    sourceCode:\n      'https://github.com/surajlokesh/walmart-Sales-Analysis-using-PySpark',\n    livePreview: 'https://github.com',\n  },\n]\n\nconst skills = [\n  // skills can be added or removed\n  // if there are no skills, Skills section won't show up\n  'Java',\n  'TypeScript',\n  'React',\n  'Spring Boot',\n  'Python',\n  'AWS (EC2, S3, Lambda, DynamoDB)',\n  'Git',\n  'CI/CD',\n  'Microservices',\n  'RESTful APIs',\n]\n\nconst contact = {\n  // email is optional - if left empty Contact section won't show up\n  email: 'surajlokesh12@gmail.com',\n  phone: '+1 305-464-0283',\n}\n\nexport { header, about, projects, skills, contact }\n","import { useContext, useState } from 'react'\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { ThemeContext } from '../../contexts/theme'\nimport { projects, skills, contact } from '../../portfolio'\nimport './Navbar.css'\n\nconst Navbar = () => {\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\n  const [showNavList, setShowNavList] = useState(false)\n\n  const toggleNavList = () => setShowNavList(!showNavList)\n\n  return (\n    <nav className='center nav'>\n      <ul\n        style={{ display: showNavList ? 'flex' : null }}\n        className='nav__list'\n      >\n        {projects.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#projects'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Projects\n            </a>\n          </li>\n        ) : null}\n\n        {skills.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#skills'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Skills\n            </a>\n          </li>\n        ) : null}\n\n        {contact.email ? (\n          <li className='nav__list-item'>\n            <a\n              href='#contact'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Contact\n            </a>\n          </li>\n        ) : null}\n      </ul>\n\n      <button\n        type='button'\n        onClick={toggleTheme}\n        className='btn btn--icon nav__theme'\n        aria-label='toggle theme'\n      >\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\n      </button>\n\n      <button\n        type='button'\n        onClick={toggleNavList}\n        className='btn btn--icon nav__hamburger'\n        aria-label='toggle navigation'\n      >\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\n      </button>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { header } from '../../portfolio'\nimport Navbar from '../Navbar/Navbar'\nimport './Header.css'\n\nconst Header = () => {\n  const { homepage, title } = header\n\n  return (\n    <header className='header center'>\n      <h3>\n        {homepage ? (\n          <a href={homepage} className='link'>\n            {title}\n          </a>\n        ) : (\n          title\n        )}\n      </h3>\n      <Navbar />\n    </header>\n  )\n}\n\nexport default Header\n","import GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport { about } from '../../portfolio'\nimport './About.css'\n\nconst About = () => {\n  const { name, role, description, social } = about\n  const resume = '../Resume/Final_Resume__fullStack.pdf'\n\n  return (\n    <div className='about center'>\n      {name && (\n        <h1>\n          Hi, I am <span className='about__name'>{name}.</span>\n        </h1>\n      )}\n\n      {role && <h2 className='about__role'>A {role}.</h2>}\n      <p className='about__desc'>{description && description}</p>\n\n      <div className='about__contact center'>\n        {resume && (\n          <a href={resume} download='Suraj_Lokesh'>\n            <span type='button' className='btn btn--outline'>\n              Resume\n            </span>\n          </a>\n        )}\n\n        {social && (\n          <>\n            {social.github && (\n              <a\n                href={social.github}\n                aria-label='github'\n                className='link link--icon'\n              >\n                <GitHubIcon />\n              </a>\n            )}\n\n            {social.linkedin && (\n              <a\n                href={social.linkedin}\n                aria-label='linkedin'\n                className='link link--icon'\n              >\n                <LinkedInIcon />\n              </a>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import uniqid from 'uniqid'\nimport GitHubIcon from '@material-ui/icons/GitHub'\n// import LaunchIcon from '@material-ui/icons/Launch'\nimport './ProjectContainer.css'\n\nconst ProjectContainer = ({ project }) => (\n  <div className='project'>\n    <h3>{project.name}</h3>\n\n    <p className='project__description'>{project.description}</p>\n    {project.stack && (\n      <ul className='project__stack'>\n        {project.stack.map((item) => (\n          <li key={uniqid()} className='project__stack-item'>\n            {item}\n          </li>\n        ))}\n      </ul>\n    )}\n\n    {project.sourceCode && (\n      <a\n        href={project.sourceCode}\n        aria-label='source code'\n        className='link link--icon'\n      >\n        <GitHubIcon />\n      </a>\n    )}\n\n    {/* {project.livePreview && (\n      <a\n        href={project.livePreview}\n        aria-label='live preview'\n        className='link link--icon'\n      >\n        <LaunchIcon />\n      </a>\n    )} */}\n  </div>\n)\n\nexport default ProjectContainer\n","import uniqid from 'uniqid'\nimport { projects } from '../../portfolio'\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\nimport './Projects.css'\n\nconst Projects = () => {\n  if (!projects.length) return null\n\n  return (\n    <section id='projects' className='section projects'>\n      <h2 className='section__title'>Projects</h2>\n\n      <div className='projects__grid'>\n        {projects.map((project) => (\n          <ProjectContainer key={uniqid()} project={project} />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default Projects\n","import uniqid from 'uniqid'\nimport { skills } from '../../portfolio'\nimport './Skills.css'\n\nconst Skills = () => {\n  if (!skills.length) return null\n\n  return (\n    <section className='section skills' id='skills'>\n      <h2 className='section__title'>Skills</h2>\n      <ul className='skills__list'>\n        {skills.map((skill) => (\n          <li key={uniqid()} className='skills__list-item btn btn--plain'>\n            {skill}\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n\nexport default Skills\n","import React, { useEffect, useState } from 'react'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport './ScrollToTop.css'\n\nconst ScrollToTop = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const toggleVisibility = () =>\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n\n    window.addEventListener('scroll', toggleVisibility)\n    return () => window.removeEventListener('scroll', toggleVisibility)\n  }, [])\n\n  return isVisible ? (\n    <div className='scroll-top'>\n      <a href='#top' aria-label='top'>\n        <ArrowUpwardIcon fontSize='large' />\n      </a>\n    </div>\n  ) : null\n}\n\nexport default ScrollToTop\n","import { contact } from '../../portfolio'\nimport './Contact.css'\n\nconst Contact = () => {\n  if (!contact.email) return null\n\n  return (\n    <section className='section contact center' id='contact'>\n      <h2 className='section__title'>Contact</h2>\n      <a href={`mailto:${contact.email}`}>\n        <span type='button' className='btn btn--outline'>\n          Email me\n        </span>\n      </a>\n\n      {contact.phone && <p className='contact__info'>Phone: {contact.phone}</p>}\n\n      {contact.email && (\n        <p className='contact__info'> email: {contact.email}</p>\n      )}\n    </section>\n  )\n}\n\nexport default Contact\n","import './Footer.css'\n\nconst Footer = () => (\n  <footer className='footer'>\n    <a\n      href='https://github.com/rjshkhr/cleanfolio'\n      className='link footer__link'\n    >\n      Created By Suraj Lokesh\n    </a>\n  </footer>\n)\n\nexport default Footer\n","import { useContext } from 'react'\nimport { ThemeContext } from './contexts/theme'\nimport Header from './components/Header/Header'\nimport About from './components/About/About'\nimport Projects from './components/Projects/Projects'\nimport Skills from './components/Skills/Skills'\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\nimport Contact from './components/Contact/Contact'\nimport Footer from './components/Footer/Footer'\nimport './App.css'\n\nconst App = () => {\n  const [{ themeName }] = useContext(ThemeContext)\n\n  return (\n    <div id='top' className={`${themeName} app`}>\n      <Header />\n\n      <main>\n        <About />\n        <Projects />\n        <Skills />\n        <Contact />\n      </main>\n\n      <ScrollToTop />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import { render } from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from './contexts/theme'\nimport './index.css'\n\nrender(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}